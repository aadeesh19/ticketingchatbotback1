const express = require('express');
const bodyParser = require('body-parser');
const path = require('path');

const app = express();
app.use(bodyParser.json());
app.use(express.static(__dirname));

const maxTickets = 10;
const supportedLanguages = ['Marathi', 'Hindi', 'Punjabi', 'Malayalam', 'English'];
let bookings = [];
const completedBookings = {};

function isValidDate(dateString) {
  if (!/^\d{4}-\d{2}-\d{2}$/.test(dateString)) return false;
  const date = new Date(dateString);
  if (Number.isNaN(date.getTime())) return false;
  const [year, month, day] = dateString.split('-').map(Number);
  const valid = date.getUTCFullYear() === year && date.getUTCMonth() + 1 === month && date.getUTCDate() === day;
  if (!valid) return false;
  const today = new Date();
  today.setHours(0,0,0,0);
  return date >= today;
}

function formatLanguageKey(str) {
  if (!str || typeof str !== 'string') return '';
  return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();
}

const messages = {
  English: {
    greeting: "Hello! Which language would you like to talk in?",
    howCanIHelp: "How can I help you today?",
    askName: "Please tell me your name.",
    askTickets: `How many tickets do you want? (1-${maxTickets})`,
    askDate: "Please provide the visit date in YYYY-MM-DD format.",
    askPlace: "Where would you like to visit? Please choose one.",
    confirmBooking: (name,tickets,date,place) => `Great! ‚ú® Booking ${tickets} tickets for ${name} on ${date} to visit ${place}. Please confirm with YES or cancel with NO.`,
    bookingConfirmed: "Your booking is confirmed! üéâ Thank you!",
    bookingCancelled: "Booking cancelled. You can start anytime.",
    invalidDate: "Sorry, the date is invalid or in the past. Please input a valid date.",
    invalidTickets: `Please enter a number of tickets between 1 and ${maxTickets}.`,
    tourOptions: [
      "Dilli Ki Darohar (Morning Circuit-1)",
      "Dilli ka Rahasya (Morning Circuit-2)",
      "Rashtrapati Bhawan (Change of Guard Ceremony Morning Tour - Dilli ka Raisina House)"
    ],
    bookLink: "https://delhitourism.gov.in/ebooking/DekhoMeriDilli",
    cancelLink: "https://delhitourism.gov.in/ebooking/cancellation"
  },
  Marathi: {
    greeting: "‡§®‡§Æ‡§∏‡•ç‡§ï‡§æ‡§∞! ‡§Ü‡§™‡§£ ‡§ï‡•ã‡§£‡§§‡•Ä ‡§≠‡§æ‡§∑‡§æ ‡§¨‡•ã‡§≤‡•Ç ‡§á‡§ö‡•ç‡§õ‡§ø‡§§‡§æ?",
    howCanIHelp: "‡§Æ‡•Ä ‡§§‡•Å‡§Æ‡•ç‡§π‡§æ‡§≤‡§æ ‡§Ü‡§ú ‡§ï‡§∂‡•Ä ‡§Æ‡§¶‡§§ ‡§ï‡§∞‡•Ç ‡§∂‡§ï‡§§‡•ã?",
    askName: "‡§ï‡•É‡§™‡§Ø‡§æ ‡§Ü‡§™‡§≤‡•á ‡§®‡§æ‡§µ ‡§∏‡§æ‡§Ç‡§ó‡§æ.",
    askTickets: "‡§§‡•Å‡§Æ‡•ç‡§π‡§æ‡§≤‡§æ ‡§ï‡§ø‡§§‡•Ä ‡§§‡§ø‡§ï‡•Ä‡§ü‡•á ‡§π‡§µ‡•á ‡§Ü‡§π‡•á‡§§?",
    askDate: "‡§ï‡•É‡§™‡§Ø‡§æ ‡§≠‡•á‡§ü‡•Ä‡§ö‡§æ ‡§¶‡§ø‡§µ‡§∏ YYYY-MM-DD ‡§∏‡•ç‡§µ‡§∞‡•Ç‡§™‡§æ‡§§ ‡§∏‡§æ‡§Ç‡§ó‡§æ.",
    askPlace: "‡§ï‡•Å‡§†‡•á ‡§≠‡•á‡§ü ‡§¶‡•á‡§ä ‡§á‡§ö‡•ç‡§õ‡§ø‡§§‡§æ? ‡§ï‡•É‡§™‡§Ø‡§æ ‡§ñ‡§æ‡§≤‡•Ä‡§≤‡§™‡•à‡§ï‡•Ä ‡§è‡§ï ‡§®‡§ø‡§µ‡§°‡§æ.",
    confirmBooking: (name,tickets,date,place) => `‡§õ‡§æ‡§®! ‚ú® ${name} ‡§∏‡§æ‡§†‡•Ä ${tickets} ‡§§‡§ø‡§ï‡•Ä‡§ü‡•á ${date} ‡§∞‡•ã‡§ú‡•Ä ${place} ‡§∏‡§æ‡§†‡•Ä ‡§®‡•ã‡§Ç‡§¶‡§£‡•Ä ‡§ï‡§∞‡•Ä‡§§ ‡§Ü‡§π‡•á. ‡§ï‡•É‡§™‡§Ø‡§æ YES ‡§Æ‡•ç‡§π‡§£‡•Ç‡§® ‡§™‡•Å‡§∑‡•ç‡§ü‡•Ä ‡§ï‡§∞‡§æ ‡§ï‡§ø‡§Ç‡§µ‡§æ NO ‡§Æ‡•ç‡§π‡§£‡•Ç‡§® ‡§∞‡§¶‡•ç‡§¶ ‡§ï‡§∞‡§æ.`,
    bookingConfirmed: "‡§§‡•Å‡§Æ‡§ö‡•Ä ‡§®‡•ã‡§Ç‡§¶‡§£‡•Ä ‡§™‡•Å‡§∑‡•ç‡§ü‡•Ä ‡§ï‡§∞‡§£‡•ç‡§Ø‡§æ‡§§ ‡§Ü‡§≤‡•Ä ‡§Ü‡§π‡•á! üéâ ‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶!",
    bookingCancelled: "‡§®‡•ã‡§Ç‡§¶‡§£‡•Ä ‡§∞‡§¶‡•ç‡§¶ ‡§ï‡§∞‡§£‡•ç‡§Ø‡§æ‡§§ ‡§Ü‡§≤‡•Ä. ‡§§‡•Å‡§Æ‡•ç‡§π‡§æ‡§≤‡§æ ‡§ï‡§ß‡•Ä‡§π‡•Ä ‡§™‡•Å‡§®‡•ç‡§π‡§æ ‡§™‡•ç‡§∞‡§æ‡§∞‡§Ç‡§≠ ‡§ï‡§∞‡§§‡§æ ‡§Ø‡•á‡§à‡§≤.",
    invalidDate: "‡§µ‡§æ‡§à‡§ü ‡§µ‡§æ‡§ü‡§§‡•á, ‡§¶‡§ø‡§≤‡•á‡§≤‡§æ ‡§¶‡§ø‡§®‡§æ‡§Ç‡§ï ‡§ö‡•Å‡§ï‡•Ä‡§ö‡§æ/‡§≠‡•Ç‡§§‡§ï‡§æ‡§≥‡§æ‡§ö‡§æ ‡§Ü‡§π‡•á. ‡§ï‡•É‡§™‡§Ø‡§æ ‡§Ø‡•ã‡§ó‡•ç‡§Ø ‡§¶‡§ø‡§®‡§æ‡§Ç‡§ï ‡§¶‡•ç‡§Ø‡§æ.",
    invalidTickets: `‡§ï‡•É‡§™‡§Ø‡§æ 1 ‡§§‡•á ${maxTickets} ‡§¶‡§∞‡§Æ‡•ç‡§Ø‡§æ‡§® ‡§§‡§ø‡§ï‡•Ä‡§ü‡§æ‡§Ç‡§ö‡•Ä ‡§Ø‡•ã‡§ó‡•ç‡§Ø ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ ‡§¶‡•ç‡§Ø‡§æ.`,
    tourOptions: [
      "‡§¶‡§ø‡§≤‡•ç‡§≤‡•Ä ‡§ï‡•Ä ‡§ß‡§∞‡•ã‡§π‡§∞ (‡§∏‡§ï‡§æ‡§≥‡•Ä ‡§∏‡§∞‡•ç‡§ï‡§ø‡§ü-1)",
      "‡§¶‡§ø‡§≤‡•ç‡§≤‡•Ä ‡§ï‡§æ ‡§∞‡§π‡§∏‡•ç‡§Ø (‡§∏‡§ï‡§æ‡§≥‡•Ä ‡§∏‡§∞‡•ç‡§ï‡§ø‡§ü-2)",
      "‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞‡§™‡§§‡•Ä ‡§≠‡§µ‡§® (‡§ó‡§æ‡§∞‡•ç‡§° ‡§¨‡§¶‡§≤ ‡§∏‡§Æ‡§æ‡§∞‡•ã‡§π - ‡§¶‡§ø‡§≤‡•ç‡§≤‡•Ä ‡§ï‡§æ ‡§∞‡•á‡§∏‡§ø‡§®‡§æ ‡§π‡§æ‡§ä‡§∏)"
    ],
    bookLink: "https://delhitourism.gov.in/ebooking/DekhoMeriDilli",
    cancelLink: "https://delhitourism.gov.in/ebooking/cancellation"
  },
  Hindi: {
    greeting: "‡§®‡§Æ‡§∏‡•ç‡§§‡•á! ‡§Ü‡§™ ‡§ï‡§ø‡§∏ ‡§≠‡§æ‡§∑‡§æ ‡§Æ‡•á‡§Ç ‡§¨‡§æ‡§§ ‡§ï‡§∞‡§®‡§æ ‡§ö‡§æ‡§π‡•á‡§Ç‡§ó‡•á?",
    howCanIHelp: "‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡•Ä ‡§ï‡•à‡§∏‡•á ‡§Æ‡§¶‡§¶ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡§æ ‡§π‡•Ç‡§Å?",
    askName: "‡§ï‡•É‡§™‡§Ø‡§æ ‡§Ö‡§™‡§®‡§æ ‡§®‡§æ‡§Æ ‡§¨‡§§‡§æ‡§è‡§Ç‡•§",
    askTickets: "‡§Ü‡§™ ‡§ï‡§ø‡§§‡§®‡•Ä ‡§ü‡§ø‡§ï‡§ü‡•á‡§Ç ‡§≤‡•á‡§®‡§æ ‡§ö‡§æ‡§π‡§§‡•á ‡§π‡•à‡§Ç?",
    askDate: "‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ï‡•É‡§™‡§Ø‡§æ YYYY-MM-DD ‡§´‡•â‡§∞‡•ç‡§Æ‡•á‡§ü ‡§Æ‡•á‡§Ç ‡§§‡§æ‡§∞‡•Ä‡§ñ ‡§¨‡§§‡§æ‡§è‡§Ç‡•§",
    askPlace: "‡§Ü‡§™ ‡§ï‡§π‡§æ‡§Å ‡§ú‡§æ‡§®‡§æ ‡§ö‡§æ‡§π‡§§‡•á ‡§π‡•à‡§Ç? ‡§ï‡•É‡§™‡§Ø‡§æ ‡§®‡•Ä‡§ö‡•á ‡§∏‡•á ‡§ö‡•Å‡§®‡•á‡§Ç‡•§",
    confirmBooking: (name,tickets,date,place) => `‡§∂‡§æ‡§®‡§¶‡§æ‡§∞! ‚ú® ${name} ‡§ï‡•á ‡§≤‡§ø‡§è ${tickets} ‡§ü‡§ø‡§ï‡§ü‡•á‡§Ç ${date} ‡§ï‡•ã ${place} ‡§Æ‡•á‡§Ç ‡§¨‡•Å‡§ï ‡§ï‡•Ä ‡§ú‡§æ ‡§∞‡§π‡•Ä ‡§π‡•à‡§Ç‡•§ ‡§ï‡•É‡§™‡§Ø‡§æ YES ‡§ï‡§π‡•á‡§Ç ‡§™‡•Å‡§∑‡•ç‡§ü‡§ø ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ø‡§æ NO ‡§ï‡§π‡•á‡§Ç ‡§∞‡§¶‡•ç‡§¶ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è‡•§`,
    bookingConfirmed: "‡§Ü‡§™‡§ï‡•Ä ‡§¨‡•Å‡§ï‡§ø‡§Ç‡§ó ‡§™‡•Å‡§∑‡•ç‡§ü‡§ø ‡§π‡•ã ‡§ó‡§à ‡§π‡•à! üéâ ‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶!",
    bookingCancelled: "‡§¨‡•Å‡§ï‡§ø‡§Ç‡§ó ‡§∞‡§¶‡•ç‡§¶ ‡§ï‡§∞ ‡§¶‡•Ä ‡§ó‡§à ‡§π‡•à‡•§ ‡§Ü‡§™ ‡§ï‡§≠‡•Ä ‡§≠‡•Ä ‡§´‡§ø‡§∞ ‡§∏‡•á ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç‡•§",
    invalidDate: "‡§ï‡•ç‡§∑‡§Æ‡§æ ‡§ï‡§∞‡•á‡§Ç, ‡§§‡§æ‡§∞‡•Ä‡§ñ ‡§ó‡§≤‡§§ ‡§π‡•à ‡§Ø‡§æ ‡§™‡§π‡§≤‡•á ‡§ï‡•Ä ‡§π‡•à‡•§ ‡§ï‡•É‡§™‡§Ø‡§æ ‡§∏‡§π‡•Ä ‡§§‡§æ‡§∞‡•Ä‡§ñ ‡§¶‡•á‡§Ç‡•§",
    invalidTickets: `‡§ï‡•É‡§™‡§Ø‡§æ 1 ‡§∏‡•á ${maxTickets} ‡§ï‡•á ‡§¨‡•Ä‡§ö ‡§ü‡§ø‡§ï‡§ü‡•ã‡§Ç ‡§ï‡•Ä ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ ‡§¶‡•á‡§Ç‡•§`,
    tourOptions: [
      "‡§¶‡§ø‡§≤‡•ç‡§≤‡•Ä ‡§ï‡•Ä ‡§ß‡§∞‡•ã‡§π‡§∞ (‡§∏‡§ï‡§æ‡§≥‡•Ä ‡§∏‡§∞‡•ç‡§ï‡§ø‡§ü-1)",
      "‡§¶‡§ø‡§≤‡•ç‡§≤‡•Ä ‡§ï‡§æ ‡§∞‡§π‡§∏‡•ç‡§Ø (‡§∏‡§ï‡§æ‡§≥‡•Ä ‡§∏‡§∞‡•ç‡§ï‡§ø‡§ü-2)",
      "‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞‡§™‡§§‡§ø ‡§≠‡§µ‡§® (‡§ó‡§æ‡§∞‡•ç‡§° ‡§¨‡§¶‡§≤ ‡§∏‡§Æ‡§æ‡§∞‡•ã‡§π - ‡§¶‡§ø‡§≤‡•ç‡§≤‡•Ä ‡§ï‡§æ ‡§∞‡•á‡§∏‡§ø‡§®‡§æ ‡§π‡§æ‡§â‡§∏)"
    ],
    bookLink: "https://delhitourism.gov.in/ebooking/DekhoMeriDilli",
    cancelLink: "https://delhitourism.gov.in/ebooking/cancellation"
  },
  Punjabi: {
    greeting: "‡®∏‡®§ ‡®∏‡©ç‡®∞‡©Ä ‡®Ö‡®ï‡®æ‡®≤! ‡®§‡©Å‡®∏‡©Ä‡®Ç ‡®ï‡®ø‡®π‡©ú‡©Ä ‡®≠‡®æ‡®∏‡®º‡®æ ‡®µ‡®ø‡®ö ‡®ó‡©±‡®≤ ‡®ï‡®∞‡®®‡®æ ‡®ö‡®æ‡®π‡©Å‡©∞‡®¶‡©á ‡®π‡©ã?",
    howCanIHelp: "‡®Æ‡©à‡®Ç ‡®§‡©Å‡®π‡®æ‡®°‡©Ä ‡®ï‡®ø‡®µ‡©á‡®Ç ‡®Æ‡®¶‡®¶ ‡®ï‡®∞ ‡®∏‡®ï‡®¶‡®æ ‡®π‡®æ‡®Ç?",
    askName: "‡®ï‡®ø‡®∞‡®™‡®æ ‡®ï‡®∞‡®ï‡©á ‡®Ü‡®™‡®£‡®æ ‡®®‡®æ‡®Æ ‡®¶‡©±‡®∏‡©ã‡•§",
    askTickets: "‡®§‡©Å‡®∏‡©Ä‡®Ç ‡®ï‡®ø‡©∞‡®®‡©Ä ‡®ü‡®ø‡®ï‡®ü‡®æ‡®Ç ‡®≤‡©à‡®£‡©Ä ‡®ö‡®æ‡®π‡©Å‡©∞‡®¶‡©á ‡®π‡©ã?",
    askDate: "‡®ï‡®ø‡®∞‡®™‡®æ ‡®ï‡®∞‡®ï‡©á YYYY-MM-DD ‡®´‡®æ‡®∞‡®Æ‡©à‡®ü ‡®µ‡®ø‡©±‡®ö ‡®¶‡®ø‡®®‡®æ‡®Ç‡®ï ‡®¶‡©±‡®∏‡©ã‡•§",
    askPlace: "‡®§‡©Å‡®∏‡©Ä‡®Ç ‡®ï‡®ø‡©±‡®•‡©á ‡®ú‡®æ‡®£‡®æ ‡®ö‡®æ‡®π‡©Å‡©∞‡®¶‡©á ‡®π‡©ã? ‡®ï‡®ø‡®∞‡®™‡®æ ‡®ï‡®∞‡®ï‡©á ‡®π‡©á‡®†‡®æ‡®Ç‡©ã‡®Ç ‡®ö‡©Å‡®£‡©ã‡•§",
    confirmBooking: (name,tickets,date,place) => `‡®µ‡®ß‡©Ä‡®Ü! ‚ú® ${name} ‡®≤‡®à ${tickets} ‡®ü‡®ø‡®ï‡®ü‡®æ‡®Ç ${date} ‡®®‡©Ç‡©∞ ${place} ‡®µ‡®ø‡©±‡®ö ‡®¨‡©Å‡®ï ‡®ï‡©Ä‡®§‡©Ä‡®Ü‡®Ç ‡®ú‡®æ ‡®∞‡®π‡©Ä‡®Ü‡®Ç ‡®π‡®®‡•§ ‡®ï‡®ø‡®∞‡®™‡®æ ‡®ï‡®∞‡®ï‡©á ‡®™‡©Å‡®∏‡®º‡®ü‡©Ä ‡®≤‡®à YES ‡®ï‡®∞‡©ã ‡®ú‡®æ‡®Ç ‡®∞‡©±‡®¶ ‡®ï‡®∞‡®® ‡®≤‡®à NO‡•§`,
    bookingConfirmed: "‡®§‡©Å‡®π‡®æ‡®°‡©Ä ‡®¨‡©Å‡®ï‡®ø‡©∞‡®ó ‡®™‡©Å‡®∏‡®º‡®ü‡©Ä ‡®π‡©ã ‡®ó‡®à ‡®π‡©à! üéâ ‡®ß‡©∞‡®®‡®µ‡®æ‡®¶!",
    bookingCancelled: "‡®¨‡©Å‡®ï‡®ø‡©∞‡®ó ‡®∞‡©±‡®¶ ‡®ï‡®∞ ‡®¶‡®ø‡©±‡®§‡©Ä ‡®ó‡®à ‡®π‡©à‡•§ ‡®§‡©Å‡®∏‡©Ä‡®Ç ‡®ï‡®¶‡©á ‡®µ‡©Ä ‡®´‡®ø‡®∞ ‡®∏‡®º‡©Å‡®∞‡©Ç ‡®ï‡®∞ ‡®∏‡®ï‡®¶‡©á ‡®π‡©ã‡•§",
    invalidDate: "‡®Æ‡®æ‡®´‡®º ‡®ï‡®∞‡®®‡®æ, ‡®¶‡®ø‡®§‡©Ä ‡®ó‡®à ‡®§‡®æ‡®∞‡©Ä‡®ñ ‡®ó‡®≤‡®§ ‡®ú‡®æ‡®Ç ‡®™‡®π‡®ø‡®≤‡®æ‡®Ç ‡®¶‡©Ä ‡®π‡©à‡•§ ‡®ï‡®ø‡®∞‡®™‡®æ ‡®ï‡®∞‡®ï‡©á ‡®∏‡®π‡©Ä ‡®§‡®æ‡®∞‡©Ä‡®ñ ‡®¶‡®ø‡®ì‡•§",
    invalidTickets: `‡®ï‡®ø‡®∞‡®™‡®æ ‡®ï‡®∞‡®ï‡©á 1 ‡®§‡©ã‡®Ç ${maxTickets} ‡®µ‡®ø‡®ö‡®ï‡®æ‡®∞ ‡®ü‡®ø‡®ï‡®ü‡®æ‡®Ç ‡®¶‡©Ä ‡®ó‡®ø‡®£‡®§‡©Ä ‡®¶‡®ø‡®ì‡•§`,
    tourOptions: [
      "‡®¶‡®ø‡©±‡®≤‡©Ä ‡®ï‡©Ä ‡®ß‡®∞‡©ã‡®π‡®∞ (‡®∏‡®µ‡©á‡®∞‡©á ‡®∏‡®∞‡®ï‡®ø‡®ü-1)",
      "‡®¶‡®ø‡©±‡®≤‡©Ä ‡®¶‡®æ ‡®∞‡®æ‡®ú (‡®∏‡®µ‡©á‡®∞‡©á ‡®∏‡®∞‡®ï‡®ø‡®ü-2)",
      "‡®∞‡®æ‡®∏‡®º‡®ü‡®∞‡®™‡®§‡©Ä ‡®≠‡®µ‡®® (‡®ó‡®æ‡®∞‡®° ‡®¨‡®¶‡®≤ ‡®∏‡®Æ‡®æ‡®∞‡©ã‡®π - ‡®¶‡®ø‡©±‡®≤‡©Ä ‡®¶‡®æ ‡®∞‡©à‡®∏‡©Ä‡®®‡®æ ‡®π‡®æ‡®ä‡®∏)"
    ],
    bookLink: "https://delhitourism.gov.in/ebooking/DekhoMeriDilli",
    cancelLink: "https://delhitourism.gov.in/ebooking/cancellation"
  },
  Malayalam: {
    greeting: "‡¥®‡¥Æ‡¥∏‡µç‡¥ï‡¥æ‡¥∞‡¥Ç! ‡¥®‡¥ø‡¥ô‡µç‡¥ô‡µæ‡¥ï‡µç‡¥ï‡µç ‡¥è‡¥§‡µç ‡¥≠‡¥æ‡¥∑‡¥Ø‡¥ø‡µΩ ‡¥∏‡¥Ç‡¥∏‡¥æ‡¥∞‡¥ø‡¥ï‡µç‡¥ï‡¥£‡¥Æ‡µÜ‡¥®‡µç‡¥®‡¥æ‡¥£‡µç ‡¥á‡¥ö‡µç‡¥õ‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡¥§‡µç?",
    howCanIHelp: "‡¥û‡¥æ‡µª ‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÜ ‡¥é‡¥ô‡µç‡¥ô‡¥®‡µÜ ‡¥∏‡¥π‡¥æ‡¥Ø‡¥ø‡¥ï‡µç‡¥ï‡¥æ‡¥Ç?",
    askName: "‡¥¶‡¥Ø‡¥µ‡¥æ‡¥Ø‡¥ø ‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥™‡µá‡¥∞‡µç ‡¥™‡¥±‡¥Ø‡¥æ‡¥Æ‡µã?",
    askTickets: "‡¥®‡¥ø‡¥ô‡µç‡¥ô‡µæ‡¥ï‡µç‡¥ï‡µç ‡¥é‡¥§‡µç‡¥∞ ‡¥ü‡¥ø‡¥ï‡µç‡¥ï‡¥±‡µç‡¥±‡µç ‡¥µ‡µá‡¥£‡¥Æ‡µÜ‡¥®‡µç‡¥®‡¥æ‡¥£‡µç ‡¥™‡¥±‡¥Ø‡¥æ‡µª ‡¥™‡µã‡¥ï‡µÅ‡¥®‡µç‡¥®‡¥§‡µç?",
    askDate: "‡¥∏‡¥®‡µç‡¥¶‡µº‡¥∂‡¥® ‡¥§‡¥ø‡¥Ø‡¥§‡¥ø YYYY-MM-DD ‡¥´‡µã‡µº‡¥Æ‡¥æ‡¥±‡µç‡¥±‡¥ø‡µΩ ‡¥®‡µΩ‡¥ï‡µÅ‡¥ï.",
    askPlace: "‡¥∏‡¥®‡µç‡¥¶‡µº‡¥∂‡¥ø‡¥ï‡µç‡¥ï‡¥æ‡µª ‡¥®‡¥ø‡¥ô‡µç‡¥ô‡µæ‡¥ï‡µç‡¥ï‡µç ‡¥Ü‡¥ó‡µç‡¥∞‡¥π‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡¥ø‡¥ü‡¥Ç ‡¥§‡¥ø‡¥∞‡¥û‡µç‡¥û‡µÜ‡¥ü‡µÅ‡¥ï‡µç‡¥ï‡µÅ‡¥ï.",
    confirmBooking: (name,tickets,date,place) => `‚ú® ${name} ${date} ‡¥®‡µç ${place} ‡¥∏‡¥®‡µç‡¥¶‡µº‡¥∂‡¥ø‡¥ï‡µç‡¥ï‡¥æ‡µª ${tickets} ‡¥ü‡¥ø‡¥ï‡µç‡¥ï‡¥±‡µç‡¥±‡µÅ‡¥ï‡µæ ‡¥¨‡µÅ‡¥ï‡µç‡¥ï‡µç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥®‡µç‡¥®‡µÅ. ‡¥¶‡¥Ø‡¥µ‡¥æ‡¥Ø‡¥ø YES ‡¥é‡¥®‡µç‡¥®‡µç ‡¥∏‡µç‡¥•‡¥ø‡¥∞‡µÄ‡¥ï‡¥∞‡¥ø‡¥ï‡µç‡¥ï‡¥æ‡µª ‡¥Ö‡¥≤‡µç‡¥≤‡µÜ‡¥ô‡µç‡¥ï‡¥ø‡µΩ NO ‡¥é‡¥®‡µç‡¥®‡µç ‡¥±‡¥¶‡µç‡¥¶‡¥æ‡¥ï‡µç‡¥ï‡¥æ‡µª ‡¥™‡¥±‡¥û‡µç‡¥û‡µÅ.`,
    bookingConfirmed: "‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥¨‡µÅ‡¥ï‡µç‡¥ï‡¥ø‡¥Ç‡¥ó‡µç ‡¥∏‡µç‡¥•‡¥ø‡¥∞‡µÄ‡¥ï‡¥∞‡¥ø‡¥ö‡µç‡¥ö‡¥ø‡¥∞‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡µÅ! üéâ ‡¥®‡¥®‡µç‡¥¶‡¥ø!",
    bookingCancelled: "‡¥¨‡µÅ‡¥ï‡µç‡¥ï‡¥ø‡¥Ç‡¥ó‡µç ‡¥±‡¥¶‡µç‡¥¶‡¥æ‡¥ï‡µç‡¥ï‡¥ø. ‡¥®‡¥ø‡¥ô‡µç‡¥ô‡µæ‡¥ï‡µç‡¥ï‡µç ‡¥é‡¥µ‡¥ø‡¥ü‡µÜ ‡¥µ‡µá‡¥£‡µÜ‡¥Ø‡µã ‡¥§‡µÅ‡¥ü‡µº‡¥®‡µç‡¥®‡µÅ ‡¥Ü‡¥∞‡¥Ç‡¥≠‡¥ø‡¥ï‡µç‡¥ï‡¥æ‡¥Ç.",
    invalidDate: "‡¥ï‡µç‡¥∑‡¥Æ‡¥ø‡¥ï‡µç‡¥ï‡¥£‡¥Ç, ‡¥®‡µΩ‡¥ï‡¥ø‡¥Ø ‡¥§‡µÄ‡¥Ø‡¥§‡¥ø ‡¥§‡µÜ‡¥±‡µç‡¥±‡¥æ‡¥Ø‡¥§‡¥æ‡¥£‡µç ‡¥Ö‡¥≤‡µç‡¥≤‡µÜ‡¥ô‡µç‡¥ï‡¥ø‡µΩ ‡¥™‡¥¥‡¥Ø ‡¥§‡µÄ‡¥Ø‡¥§‡¥ø‡¥Ø‡¥æ‡¥£‡µç. ‡¥¶‡¥Ø‡¥µ‡¥æ‡¥Ø‡¥ø ‡¥∂‡¥∞‡¥ø‡¥Ø‡¥æ‡¥Ø ‡¥§‡µÄ‡¥Ø‡¥§‡¥ø ‡¥®‡µΩ‡¥ï‡µÅ‡¥ï.",
    invalidTickets: `‡¥¶‡¥Ø‡¥µ‡¥æ‡¥Ø‡¥ø 1 ‡¥Æ‡µÅ‡¥§‡µΩ ${maxTickets} ‡¥µ‡¥∞‡µÜ ‡¥ü‡¥ø‡¥ï‡µç‡¥ï‡¥±‡µç‡¥±‡µç ‡¥é‡¥£‡µç‡¥£‡¥Ç ‡¥®‡µΩ‡¥ï‡µÅ‡¥ï.`,
    tourOptions: [
      "[‡¥¶‡¥ø‡¥µ‡¥∏‡¥Ç] ‡¥¶‡¥ø‡¥≤‡µç‡¥≤‡¥ø ‡¥ï‡¥ø ‡¥ß‡¥∞‡µã‡¥π‡µº (‡¥Æ‡µã‡¥£‡¥ø‡¥ô‡µç ‡¥∏‡µº‡¥ï‡µç‡¥Ø‡µÇ‡¥ü‡µç‡¥ü‡µç-1)",
      "[‡¥¶‡¥ø‡¥µ‡¥∏‡¥Ç] ‡¥¶‡¥ø‡¥≤‡µç‡¥≤‡¥ø ‡¥ï ‡¥±‡¥π‡¥∏‡µç‡¥Ø (‡¥Æ‡µã‡¥£‡¥ø‡¥ô‡µç ‡¥∏‡µº‡¥ï‡µç‡¥Ø‡µÇ‡¥ü‡µç‡¥ü‡µç-2)",
      "[‡¥¶‡¥ø‡¥µ‡¥∏‡¥Ç] ‡¥∞‡¥æ‡¥∑‡µç‡¥ü‡µç‡¥∞‡¥™‡¥§‡¥ø ‡¥≠‡¥µ‡µª (‡¥ö‡µá‡¥û‡µç‡¥ö‡µç ‡¥ì‡¥´‡µç ‡¥ó‡¥æ‡µº‡¥°‡µç ‡¥∏‡µÜ‡¥±‡¥ø‡¥Æ‡¥£‡¥ø - ‡¥¶‡¥ø‡¥≤‡µç‡¥≤‡¥ø ‡¥ï ‡¥±‡µà‡¥∏‡µÄ‡¥® ‡¥π‡µó‡¥∏‡µç)"
    ],
    bookLink: "https://delhitourism.gov.in/ebooking/DekhoMeriDilli",
    cancelLink: "https://delhitourism.gov.in/ebooking/cancellation"
  }
};

// Chat endpoint
app.post('/chat', (req, res) => {
  try {
    const { message = '', userId } = req.body;
    if(!userId) return res.status(400).json({reply:'Missing userId', quickReplies:[]});

    let userBooking = bookings.find(b => b.userId === userId);

    if(!userBooking && !completedBookings[userId]){
      const langChoice = formatLanguageKey(message.trim());
      const langMsgs = messages[langChoice] || messages['English'];

      if(!message.trim() || !supportedLanguages.includes(langChoice)){
        return res.json({
          reply: langMsgs.greeting + " " + supportedLanguages.join(', '),
          quickReplies: supportedLanguages
        });
      }

      userBooking = {userId, step:1, data:{language:langChoice}};
      bookings.push(userBooking);

      return res.json({
        reply: langMsgs.howCanIHelp,
        quickReplies:[]
      });
    }

    if(!userBooking){
      return res.json({reply:`Hello! Please select a language: ${supportedLanguages.join(', ')}`, quickReplies:supportedLanguages});
    }

    const lang = userBooking.data.language;
    const langMsgs = messages[lang] || messages['English'];

    switch(userBooking.step){
      case 1:
        userBooking.data.name = message.trim();
        userBooking.step++;
        return res.json({reply: langMsgs.askTickets, quickReplies:Array.from({length:maxTickets},(_,i)=>(i+1).toString())});

      case 2:
        const ticketCount = parseInt(message);
        if(isNaN(ticketCount)||ticketCount<=0||ticketCount>maxTickets)
          return res.json({reply: langMsgs.invalidTickets, quickReplies:Array.from({length:maxTickets},(_,i)=>(i+1).toString())});
        userBooking.data.tickets = ticketCount;
        userBooking.step++;
        return res.json({reply: langMsgs.askDate, quickReplies:["2025-12-25","2026-01-01","2026-05-15"]});

      case 3:
        if(!isValidDate(message)) return res.json({reply: langMsgs.invalidDate, quickReplies:["2025-12-25","2026-01-01","2026-05-15"]});
        userBooking.data.date = message;
        userBooking.step++;
        return res.json({reply: langMsgs.askPlace, quickReplies:["Delhi","Kerala"]});

      case 4:
        if(!["Delhi","Kerala"].includes(message)) return res.json({reply: langMsgs.askPlace, quickReplies:["Delhi","Kerala"]});
        userBooking.data.visitPlace = message;
        userBooking.step++;
        if(message==="Delhi"){
          return res.json({reply:"Please select a tour option:", quickReplies: langMsgs.tourOptions});
        }else{
          userBooking.step = 99;
          return res.json({reply: langMsgs.confirmBooking(userBooking.data.name,userBooking.data.tickets,userBooking.data.date,message), quickReplies:["YES","NO"]});
        }

      case 5:
        if(!langMsgs.tourOptions.includes(message))
          return res.json({reply:"Please select a valid tour option.", quickReplies: langMsgs.tourOptions});
        userBooking.step = 99;
        return res.json({reply:`You selected "${message}". Book your ticket here: ${langMsgs.bookLink}`, quickReplies:["Cancel my booking","New booking"]});

      case 99:
        if(message.toLowerCase().includes("cancel")){
          bookings = bookings.filter(b=>b.userId!==userId);
          return res.json({reply:`Cancel your ticket here: ${langMsgs.cancelLink}`, quickReplies: supportedLanguages});
        }else if(message.toLowerCase().includes("new")){
          bookings = bookings.filter(b=>b.userId!==userId);
          return res.json({reply:"Starting new booking...", quickReplies: supportedLanguages});
        }else{
          return res.json({reply: langMsgs.howCanIHelp, quickReplies: supportedLanguages});
        }

      default:
        bookings = bookings.filter(b=>b.userId!==userId);
        return res.json({reply: langMsgs.howCanIHelp, quickReplies: supportedLanguages});
    }

  }catch(err){
    console.error(err);
    return res.status(500).json({reply:"Something went wrong.", quickReplies:[]});
  }
});

const PORT = 3000;
app.listen(PORT, ()=>console.log(`üöÄ Backend is running! Use POST /chat for chatbot messages.`));
